define("1156f40","ui/main.reel/main.html",{text:'<!doctype html>\n<html>  <head>    <meta http-equiv=Content-Type content="text/html; charset=utf-8">\n    <title>Main</title>\n    <link rel=stylesheet type="text/css" href=main.css>\n    <script type="text/montage-serialization">{"owner":{"properties":{"element":{"#":"mainComponent"},"newTodoForm":{"#":"newTodoForm"},"newTodoInput":{"#":"new-todo"}}},"todoRepetition":{"prototype":"montage/ui/repetition.reel","properties":{"element":{"#":"todo-list"}},"bindings":{"contentController":{"<-":"@owner.todoListController"}}},"todoView":{"prototype":"ui/todo-view.reel","properties":{"element":{"#":"todoView"}},"bindings":{"todo":{"<-":"@todoRepetition.objectAtCurrentIteration"}}},"main":{"prototype":"montage/ui/dynamic-element.reel","properties":{"element":{"#":"main"}},"bindings":{"classList.visible":{"<-":"@owner.todoListController.organizedObjects.0"}}},"footer":{"prototype":"montage/ui/dynamic-element.reel","properties":{"element":{"#":"footer"}},"bindings":{"classList.visible":{"<-":"@owner.todoListController.organizedObjects.0"}}},"toggleAllCheckbox":{"prototype":"montage/ui/native/input-checkbox.reel","properties":{"element":{"#":"toggle-all"}},"bindings":{"checked":{"<->":"@owner.allCompleted"}}},"todoCount":{"prototype":"montage/ui/dynamic-text.reel","properties":{"element":{"#":"todo-count"}},"bindings":{"value":{"<-":"@owner.todosLeft.count()"}}},"itemCountConverter":{"prototype":"ui/main.reel/item-count-converter"},"todoCountWording":{"prototype":"montage/ui/dynamic-text.reel","properties":{"element":{"#":"todo-count-wording"}},"bindings":{"value":{"<-":"@owner.todosLeft.count()","converter":{"@":"itemCountConverter"}}}},"completedCount":{"prototype":"montage/ui/dynamic-text.reel","properties":{"element":{"#":"completed-count"}},"bindings":{"value":{"<-":"@owner.completedTodos.count()"}}},"clearCompletedContainer":{"prototype":"montage/ui/dynamic-element.reel","properties":{"element":{"#":"clear-completed-container"}},"bindings":{"classList.visible":{"<-":"@owner.completedTodos.count()"}}},"clearCompletedButton":{"prototype":"montage/ui/native/button.reel","properties":{"element":{"#":"clear-completed"}},"listeners":[{"type":"action","listener":{"@":"owner"},"capture":false}]}}</script>\n</head>\n  <body>    <div data-montage-id=mainComponent>      <section id=todoapp>        <header id=header>          <h1>todos</h1>\n          <form data-montage-id=newTodoForm>            <input data-montage-id=new-todo id=new-todo placeholder="What needs to be done?" autofocus=autofocus>\n</form>\n</header>\n        <section data-montage-id=main id=main>          <input data-montage-id=toggle-all id=toggle-all type=checkbox>\n          <label for=toggle-all>Mark all as complete</label>\n          <ul data-montage-id=todo-list id=todo-list>            <li data-montage-id=todoView></li>\n</ul>\n</section>\n        <footer data-montage-id=footer id=footer>          <span id=todo-count>\n            <strong data-montage-id=todo-count>0</strong>\n            <span data-montage-id=todo-count-wording>items</span>\n left</span>\n          <div data-montage-id=clear-completed-container id=clear-completed-container>            <button data-montage-id=clear-completed id=clear-completed>Clear completed (              <span data-montage-id=completed-count>0</span>\n)</button>\n</div>\n</footer>\n</section>\n      <footer id=info>        <p>Double-click to edit a todo</p>\n        <p>Created with           <a href="http://github.com/motorola-mobility/montage">Montage</a>\n</p>\n        <p>Source available at           <a href="http://github.com/mczepiel/montage-todomvc">Montage-TodoMVC</a>\n</p>\n        <p>Part of           <a href="http://todomvc.com">TodoMVC</a>\n        </p>\n</footer>\n</div>\n</body>\n</html>'}),define("4763f06","ui/native/button.reel/button",{dependencies:["montage","ui/component","ui/native-control","ui/composer/press-composer"],factory:function(a,b,c){var d=a("montage").Montage,e=a("ui/component").Component,f=a("ui/native-control").NativeControl,g=a("ui/composer/press-composer").PressComposer,h=b.Button=d.create(f,{_preventFocus:{enumerable:!1,value:!1},preventFocus:{get:function(){return this._preventFocus},set:function(a){a===!0?this._preventFocus=!0:this._preventFocus=!1}},enabled:{dependencies:["disabled"],get:function(){return!this._disabled},set:function(a){this.disabled=!a}},converter:{value:null},_labelNode:{value:undefined,enumerable:!1},_label:{value:undefined,enumerable:!1},label:{get:function(){return this._label},set:function(a){if(a&&a.length>0&&this.converter)try{a=this.converter.convert(a),this.error&&(this.error=null)}catch(b){this.error=b}this._label=a,this._isInputElement&&(this._value=a),this.needsDraw=!0}},holdThreshold:{get:function(){return this._pressComposer.longPressThreshold},set:function(a){this._pressComposer.longPressThreshold=a}},_pressComposer:{enumberable:!1,value:null},_active:{enumerable:!1,value:!1},active:{get:function(){return this._active},set:function(a){this._active=a,this.needsDraw=!0}},blur:{value:function(){this._element.blur()}},focus:{value:function(){this._element.focus()}},didCreate:{value:function(){this._pressComposer=g.create(),this.addComposer(this._pressComposer)}},prepareForActivationEvents:{value:function(){this._pressComposer.addEventListener("pressStart",this,!1),this._pressComposer.addEventListener("press",this,!1),this._pressComposer.addEventListener("pressCancel",this,!1)}},addEventListener:{value:function(a,b,c){f.addEventListener.call(this,a,b,c),a==="hold"&&this._pressComposer.addEventListener("longPress",this,!1)}},handlePressStart:{value:function(a){this.active=!0,a.preventDefault(),this._preventFocus||this._element.focus()}},handlePress:{value:function(a){this.active=!1,this._dispatchActionEvent()}},handleKeyup:{value:function(a){a.keyCode===32&&(this.active=!1,this._dispatchActionEvent())}},handleLongPress:{value:function(a){this._pressComposer.cancelPress();var b=document.createEvent("CustomEvent");b.initCustomEvent("hold",!0,!0,null),this.dispatchEvent(b)}},handlePressCancel:{value:function(a){this.active=!1}},_isInputElement:{value:!1,enumerable:!1},didSetElement:{value:function(){f.didSetElement.call(this),this._element.setAttribute("role","button"),this._isInputElement=this._element.tagName==="INPUT",this._isInputElement?(Object.defineProperty(this,"value",{get:function(){return this._label},set:function(a){this.label=a}}),this._label===undefined&&(this._label=this._element.value)):(this._element.firstChild||this._element.appendChild(document.createTextNode("")),this._labelNode=this._element.firstChild,this._label===undefined&&(this._label=this._labelNode.data)),this.needsDraw=!0}},prepareForDraw:{value:function(){this._element.addEventListener("keyup",this,!1)}},_drawLabel:{enumerable:!1,value:function(a){this._isInputElement?this._element.setAttribute("value",a):this._labelNode.data=a}},draw:{value:function(){Object.getPrototypeOf(h).draw.call(this),this._disabled?this._element.classList.add("disabled"):this._element.classList.remove("disabled"),this._active?this._element.classList.add("active"):this._element.classList.remove("active"),this._drawLabel(this.label)}}});h.addAttributes({autofocus:{value:!1,dataType:"boolean"},disabled:{value:!1,dataType:"boolean"},form:null,formaction:null,formenctype:null,formmethod:null,formnovalidate:{dataType:"boolean"},formtarget:null,type:{value:"button"},name:null,value:null})}}),define("4763f06","ui/native-control",{dependencies:["montage","ui/component"],factory:function(a,b,c){var d=a("montage").Montage,e=a("ui/component").Component,f=b.NativeControl=d.create(e,{hasTemplate:{value:!1},element:{get:function(){return this._element},set:function(a){Object.getPropertyDescriptor(e,"element").set.call(this,a),a&&this.didSetElement()}},_elementAttributeValues:{value:{},distinct:!0},_elementAttributeDescriptors:{value:{},distinct:!0},_getElementAttributeDescriptor:{value:function(a){var b,c=this;while(c&&typeof c._elementAttributeDescriptors!="undefined"){b=c._elementAttributeDescriptors[a];if(b)break;c=Object.getPrototypeOf(c)}return b}},defineAttribute:{value:function(a,b){b=b||{};var c="_"+a,e={configurable:typeof b.configurable=="undefined"?!0:b.configurable,enumerable:typeof b.enumerable=="undefined"?!0:b.enumerable,set:function(a,b){return function(c){var d=this._getElementAttributeDescriptor(a,this);d&&"boolean"===d.dataType&&(c=c||c===""?!0:!1),typeof c!="undefined"&&this[b]!==c&&(this[b]=c,this._elementAttributeValues[a]=c,this.needsDraw=!0)}}(a,c),get:function(a,b){return function(){return this[b]}}(a,c)};d.defineProperty(this,c,{value:null}),d.defineProperty(this,a,e)}},addAttributes:{value:function(a){var b,c,d,e;this._elementAttributeDescriptors=a;for(d in a)a.hasOwnProperty(d)&&(e=a[d],e===null||String.isString(e)?(c={value:e,dataType:"string"},a[d]=c):c=e,typeof this[d]=="undefined"&&this.defineAttribute(d,c))}},didSetElement:{value:function(){var a=this.element.attributes||[],b=0,c=a.length,d,e,f,g,h;for(b=0;b<c;b++){d=a[b].name,e=a[b].value,g=this._getElementAttributeDescriptor(d,this);if(g||typeof this[d]!="undefined")if(typeof this._elementAttributeValues[d]=="undefined"){this._elementAttributeValues[d]=e;if(typeof this[d]=="undefined"||this[d]==null)this[d]=e}}h=this.element.textContent;if("textContent"in this&&h&&""!==h&&typeof this._elementAttributeValues.textContent=="undefined"){this._elementAttributeValues.textContent=h;if(typeof this.textContent=="undefined"||this.textContent===null)this.textContent=h}for(f in this._elementAttributeDescriptors){g=this._elementAttributeDescriptors[f];var i="_"+f;this[i]===null&&g!==null&&"value"in g&&(this[i]=this._elementAttributeDescriptors[f].value)}this.needsDraw=!0}},draw:{enumerable:!1,value:function(){var a=this.element,b;for(var c in this._elementAttributeValues)if(this._elementAttributeValues.hasOwnProperty(c)){var d=this[c];b=this._getElementAttributeDescriptor(c,this),b&&(b.dataType==="boolean"?d===!0?(a[c]=!0,a.setAttribute(c,c.toLowerCase())):(a[c]=!1,a.removeAttribute(c)):typeof d!="undefined"&&(c==="textContent"?a.textContent=d:a.setAttribute(c,d))),delete this._elementAttributeValues[c]}}}});f.addAttributes({accesskey:null,contenteditable:null,contextmenu:null,"class":null,dir:null,draggable:null,dropzone:null,hidden:{dataType:"boolean"},lang:null,spellcheck:null,style:null,tabindex:null,title:null})}}),define("1156f40","ui/todo-view.reel/todo-view",{dependencies:["montage","montage/ui/component"],factory:function(a,b,c){var d=a("montage").Montage,e=a("montage/ui/component").Component;b.TodoView=d.create(e,{todo:{value:null},editInput:{value:null},didCreate:{value:function(){Object.defineBinding(this,"isCompleted",{boundObject:this,boundObjectPropertyPath:"todo.completed",oneway:!0})}},prepareForDraw:{value:function(){this.element.addEventListener("dblclick",this,!1),this.element.addEventListener("blur",this,!0),this.element.addEventListener("submit",this,!1)}},captureDestroyButtonAction:{value:function(){this.dispatchDestroy()}},dispatchDestroy:{value:function(){this.dispatchEventNamed("destroyTodo",!0,!0,{todo:this.todo})}},handleDblclick:{value:function(a){this.isEditing=!0}},_isEditing:{value:!1},isEditing:{get:function(){return this._isEditing},set:function(a){if(a===this._isEditing)return;this._isEditing=a,this.needsDraw=!0}},_isCompleted:{value:!1},isCompleted:{get:function(){return this._isCompleted},set:function(a){if(a===this._isCompleted)return;this._isCompleted=a,this.needsDraw=!0}},captureBlur:{value:function(a){this.isEditing&&this.editInput.element===a.target&&this._submitTitle()}},handleSubmit:{value:function(a){this.isEditing&&(a.preventDefault(),this._submitTitle())}},_submitTitle:{value:function(){var a=this.editInput.value.trim();""===a?this.dispatchDestroy():this.todo.title=a,this.isEditing=!1}},draw:{value:function(){this.isEditing?(this.element.classList.add("editing"),this.editInput.element.select()):(this.element.classList.remove("editing"),this.editInput.element.blur()),this.isCompleted?this.element.classList.add("completed"):this.element.classList.remove("completed")}}})}}),define("1156f40","ui/todo-view.reel/todo-view.html",{text:'<!doctype html>\n<html>  <head>    <meta http-equiv=Content-Type content="text/html; charset=utf-8">\n    <title>TodoView</title>\n    <script type="text/montage-serialization">{"owner":{"properties":{"element":{"#":"todoView"},"editInput":{"@":"editInput"}}},"todoTitle":{"prototype":"montage/ui/dynamic-text.reel","properties":{"element":{"#":"todoTitle"}},"bindings":{"value":{"<-":"@owner.todo.title"}}},"todoCompletedCheckbox":{"prototype":"montage/ui/native/input-checkbox.reel","properties":{"element":{"#":"todoCompletedCheckbox"}},"bindings":{"checked":{"<->":"@owner.todo.completed"}}},"destroyButton":{"prototype":"montage/ui/native/button.reel","properties":{"element":{"#":"destroyButton"}},"listeners":[{"type":"action","listener":{"@":"owner"},"capture":true}]},"editInput":{"prototype":"montage/ui/native/input-text.reel","properties":{"element":{"#":"edit-input"}},"bindings":{"value":{"<-":"@owner.todo.title"}}}}</script>\n</head>\n  <body>    <li data-montage-id=todoView>      <div class=view>        <input data-montage-id=todoCompletedCheckbox class=toggle type=checkbox>\n        <label data-montage-id=todoTitle></label>\n        <button data-montage-id=destroyButton class=destroy></button>\n</div>\n      <form data-montage-id=edit>        <input data-montage-id=edit-input class=edit value="Rule the web">\n</form>\n</li>\n</body>\n</html>'}),define("4763f06","ui/controller/object-controller",{dependencies:["montage"],factory:function(a,b,c){var d=a("montage").Montage,e=b.ObjectController=d.create(d,{objectPrototype:{enumerable:!1,value:null},newObject:{enumerable:!1,value:function(){return this.objectPrototype.create()}},initWithContent:{value:function(a){return this.content=a,this}},content:{enumerable:!1,value:null}})}}),define("1156f40","core/todo",{dependencies:["montage"],factory:function(a,b,c){var d=a("montage").Montage;b.Todo=d.create(d,{initWithTitle:{value:function(a){return this.title=a,this}},title:{value:null},completed:{value:!1}})}})
bundleLoaded("bundle-1-1-67d5b5c.js")